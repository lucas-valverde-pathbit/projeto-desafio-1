services:
  # Infrastructure
  db:
    image: postgres:latest
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: meubanco
      POSTGRES_USER: meuusuario
      POSTGRES_PASSWORD: minhasenha
    networks:
      - test-docker-sample-net

  # Development API
  api-dev:
    build:
      context: .  # Contexto do build
      dockerfile: Dockerfile.api.dev  # Dockerfile do backend
    container_name: api-dev
    depends_on:
      - db
    ports:
      - "5064:5064"
    volumes:
      - ./backend/src:/api  # Volume para mapear código fonte do backend
    networks:
      - test-docker-sample-net
    environment:
      PG_CONNECTION_STRING: "postgresql://meuusuario:minhasenha@db:5432/meubanco"
    tty: true
    stdin_open: true
    command: ["tail", "-f", "/dev/null"]  # Inicia o servidor web com monitoramento de alterações

  # Development Web
  web-dev:
    build:
      context: .  # Contexto do build
      dockerfile: Dockerfile.web.dev  # Dockerfile do frontend
    container_name: web-dev
    tty: true
    stdin_open: true
    command: ["tail", "-f", "/dev/null"]  # Comando para rodar o frontend com watch
    ports:
      - "8080:8080"  
    depends_on:
      - api-dev  
    volumes:
      - ./frontend/webapp:/web  

networks:
  test-docker-sample-net:
    driver: bridge
