FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ENV ASPNETCORE_URLS=http://+:5064

WORKDIR /src
COPY ["src/Api/Api.csproj", "src/Api/"]
COPY ["src/Application/Application.csproj", "src/Application/"]
COPY ["src/Domain/Domain.csproj", "src/Domain/"]
COPY ["src/Infrastructure/Infrastructure.csproj", "src/Infrastructure/"]
RUN dotnet restore "src/Api/Api.csproj"
RUN dotnet add "src/Api/Api.csproj" package Npgsql.EntityFrameworkCore.PostgreSQL --version 9.0.3
RUN dotnet add "src/Api/Api.csproj" package Microsoft.AspNetCore.Authentication.JwtBearer --version 7.0.0

RUN dotnet add "src/Api/Api.csproj" package IdentityModel --version 7.0.0
COPY . .
COPY wait-for-postgres.sh /wait-for-postgres.sh
WORKDIR "/src/src/Api"



RUN dotnet build "Api.csproj" -c Release -o /app/build

# Install EF Core tools and add to PATH
RUN dotnet tool install --global dotnet-ef
ENV PATH="$PATH:/root/.dotnet/tools"

FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
ENV ASPNETCORE_URLS=http://+:5064

WORKDIR /app
EXPOSE 5064
COPY --from=build /app/build .




# Install PostgreSQL client
RUN apt-get update && \
    apt-get install -y postgresql-client && \
    rm -rf /var/lib/apt/lists/*

# Copy scripts
COPY wait-for-postgres.sh /wait-for-postgres.sh
COPY startup.sh /startup.sh
RUN chmod +x /wait-for-postgres.sh /startup.sh

ENTRYPOINT ["/startup.sh"]
